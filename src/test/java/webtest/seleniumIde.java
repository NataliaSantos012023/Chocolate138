package webtest;
// Generated by Selenium IDE

import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.MatcherAssert.assertThat;


import io.github.bonigarcia.wdm.WebDriverManager;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.chrome.ChromeOptions;

import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import java.util.*;

import java.util.concurrent.TimeUnit;

public class seleniumIde {
    private WebDriver driver;
    private Map<String, Object> vars;
    JavascriptExecutor js;
    @BeforeMethod
    public void setUp() {
        // Instalar e configurar o driver do navegador/browser
        WebDriverManager.chromedriver().setup(); // download e instalação do Chrome Driver

        // Configurar as opções para o driver do navegador (a partir do Selenium 4.8.0)
        ChromeOptions options = new ChromeOptions(); // objeto de configuração para o Chrome Driver
        options.addArguments("--remote-allow-origins=*"); // permitir qualquer origem remota

        WebDriverManager.chromedriver().setup(); // Instala o driver mais atual do Microsoft Edge
        driver = new ChromeDriver(); // Instancia o selenium como EdgeDriver
        driver.manage().timeouts().implicitlyWait(60000, TimeUnit.MILLISECONDS);

        js = (JavascriptExecutor) driver;
        vars = new HashMap<String, Object>();
    }

    @AfterMethod
    public void tearDown() {
        driver.quit();
    }
    @Test
    public void login() throws InterruptedException {
        driver.get("https://www.saucedemo.com/");
        driver.manage().window().setSize(new Dimension(945, 728));
        driver.findElement(By.cssSelector("*[data-test=\"username\"]")).click();
        driver.findElement(By.cssSelector("*[data-test=\"username\"]")).sendKeys("standard_user");
        driver.findElement(By.cssSelector("*[data-test=\"password\"]")).click();
        driver.findElement(By.cssSelector("*[data-test=\"password\"]")).sendKeys("secret_sauce");
        driver.findElement(By.cssSelector("*[data-test=\"login-button\"]")).click();
        // carregamento da página interna --> demora um pouco
        // Este psso não é necessário, pois o carrinho já inicia vazio
        //driver.findElement(By.cssSelector("*[data-test=\"remove-sauce-labs-backpack\"]")).click();
        assertThat(driver.findElement(By.cssSelector("#item_4_title_link > .inventory_item_name")).getText(), is(
                "Sauce Labs Backpack"));
        assertThat(driver.findElement(By.cssSelector(".inventory_item:nth-child(1) .inventory_item_price")).getText(),
                is("$29.99"));
        driver.findElement(By.cssSelector("*[data-test=\"add-to-cart-sauce-labs-backpack\"]")).click();
        driver.findElement(By.linkText("1")).click();
        driver.findElement(By.cssSelector("*[data-test=\"checkout\"]")).click();
        assertThat(driver.findElement(By.cssSelector(".title")).getText(), is("Checkout: Your Information"));
    }
}
